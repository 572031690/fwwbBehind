<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhy.Mapper.UserMapper">
    <!--配置查询所有，resultType的作用就是返回封装的位置，如果你要是不写的话，最后mybatis是不知道你到底要封装到哪里，会出现错误，我这个是User表，查询的也是这个，最后返回的结果就封装在User类中-->
    <select id="findAll" resultType="com.xhy.domain.User" parameterType="String">
        SELECT userId,username,realname, telNum, employeeid, isDisabled FROM tb_users
        <where>
            <if test="searchName !=null and   searchName!=''">
                username like '%${searchName}%'
            </if>
        </where>
    </select>

    <select id="findUser" parameterType="String" resultType="com.xhy.domain.User">
        SELECT *
        from tb_users
        where username = #{username};
    </select>

    <select id="findbyid" parameterType="int" resultType="com.xhy.domain.User">
        select *
        from tb_users
        where userId = #{userid}
    </select>

    <select id="getRoleIdByName" parameterType="String" resultType="java.lang.Integer">
        SELECT tur.roleId
        from tb_users u inner join tb_user_role tur  on u.userId = tur.userId where username = #{username};
    </select>

    <select id="login" parameterType="com.xhy.domain.User" resultType="com.xhy.domain.User">
        select *
        from tb_users
        where username = #{username}
          and password = #{password}
    </select>

    <insert id="addUser" parameterType="com.xhy.domain.User">
        insert into tb_users
        values (null, #{username},#{realname}, #{password}, #{salt}, #{telNum}, #{employeeid}, 0);
    </insert>

    <update id="updateUser" parameterType="com.xhy.domain.User">
        update tb_users
        set username=#{username},
            realname=#{realname},
            telNum=#{telNum},
            employeeid=#{employeeid}
        where userId = #{userid}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete
        from tb_users
        where userId = #{userid};
    </delete>

    <select id="findbyname" parameterType="String" resultType="com.xhy.domain.User">
        select *
        from tb_users
        where username = #{username};
    </select>

    <!--    查询当前用户所有角色-->
    <select id="findRoleById" resultType="java.lang.String" parameterType="int">
        select DISTINCT rolename
        from tb_roles r
                 INNER JOIN tb_user_role ur ON r.roleId = ur.roleId
        where ur.userId = #{userId}
    </select>

    <!--    查询当前用户所有权限-->
    <select id="findPermissionById" parameterType="int" resultType="java.lang.String">
        SELECT DISTINCT p.permission
        from tb_permessions p
                 INNER JOIN tb_role_permission rp on p.id = rp.permId
                 INNER JOIN tb_roles r on r.roleId = rp.roleId
                 INNER JOIN tb_user_role ur on ur.roleId = r.roleId
        where ur.userid = #{userId};
    </select>


    <!--***************用户角色中间表***********-->
    <!--    向角色用户表添加-->
    <insert id="addUserRole" parameterType="com.xhy.domain.UserRole">
        insert into tb_user_role (roleId, userId)
        values (#{roleId}, #{userId})
    </insert>

    <!--修改用户角色关联-->
    <update id="updateUserRole" parameterType="com.xhy.domain.UserRole">
        update tb_user_role
        set userId = #{userId},
            roleId = #{roleId}
    </update>

    <!--删除用户角色关联-->
    <delete id="deleteUserRole" parameterType="int">
        delete
        from tb_user_role
        where userId = #{userId};
    </delete>


    <!--*******************审批相关操作**************************-->
    <!--查询处理人id-->
    <select id="getAssigneeId" parameterType="com.xhy.domain.User" resultType="int">
        select userId from tb_users where userId =#{userid}
    </select>


    <!--重置密码-->
    <update id="updatePassword" parameterType="com.xhy.domain.User">
        update tb_users set  password=#{password},salt=#{salt} where userId =#{userid}
    </update>

    <!--状态修改-->
    <update id="updateStatus" parameterType="com.xhy.domain.User">
        update tb_users set isDisabled=#{isDisabled} where userId=#{userid};
    </update>
</mapper>
